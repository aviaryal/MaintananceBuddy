Index: app/src/main/java/com/example/maintanancebuddy/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.maintanancebuddy\r\n\r\nimport android.content.Context\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.os.PatternMatcher\r\nimport android.util.Log\r\nimport android.util.Patterns\r\nimport android.widget.EditText\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport com.example.maintanancebuddy.Models.User\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.database.*\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.xwray.groupie.GroupAdapter\r\n\r\nimport kotlinx.android.synthetic.main.login.*\r\n\r\nclass LoginActivity : AppCompatActivity() {\r\n    private lateinit var auth: FirebaseAuth\r\n    private var postListener: ValueEventListener? = null\r\n    private lateinit var ref: DatabaseReference\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.login)\r\n        auth = Firebase.auth\r\n\r\n        login_button_login.setOnClickListener()\r\n        {\r\n            SignIn()\r\n        }\r\n        forget_password_text_view.setOnClickListener()\r\n        {\r\n            val builder = AlertDialog.Builder(this)\r\n            builder.setTitle(\"Forgot Password\")\r\n            val view = layoutInflater.inflate(R.layout.password_reset,null)\r\n            val username= view.findViewById<EditText>(R.id.et_username)\r\n            builder.setView(view)\r\n            builder.setPositiveButton(\"Reset\",DialogInterface.OnClickListener{_,_->\r\n                forgotPassword(username)\r\n            })\r\n            builder.setNegativeButton(\"Close\",DialogInterface.OnClickListener{_,_->})\r\n            builder.show()\r\n        }\r\n            Log.d(\"Login\", \"User forget password \")\r\n            //val intent= Intent(this,Forget::class.java)\r\n\r\n        register_account.setOnClickListener()\r\n        {\r\n            Log.d(\"Login\", \"User new account clicked\")\r\n            val intent = Intent(this, RegisterActivity::class.java) //\r\n            startActivity(intent) //\r\n        }\r\n\r\n    }\r\nprivate fun forgotPassword(username:EditText) {\r\n         if(username.text.toString().isEmpty()) {\r\n             return\r\n         }\r\n    if(!Patterns.EMAIL_ADDRESS.matcher(username.text.toString()).matches()){\r\n        return\r\n    }\r\n\r\n    Firebase.auth.sendPasswordResetEmail(username.text.toString())\r\n        .addOnCompleteListener { task ->\r\n            if (task.isSuccessful) {\r\n                Toast.makeText(this, \"Email sent.\",Toast.LENGTH_SHORT).show()\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n    private fun SignIn() {\r\n        val email = email_login.text.toString()\r\n        val password = password_login.text.toString()\r\n\r\n        if (email.isEmpty()) {\r\n            Toast.makeText(this, \"Please fill out email\", Toast.LENGTH_SHORT).show()\r\n\r\n        } else if (password.isEmpty()) {\r\n            Toast.makeText(this, \"Please fill out password\", Toast.LENGTH_SHORT).show()\r\n\r\n        } else {\r\n            //FirebaseAuth.getInstance().signInWithEmailAndPassword(email, password)\r\n            auth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this)\r\n                {\r\n                    if (it.isSuccessful) {\r\n                        Log.d(\"Login\", \"Login Sucessful: ${it.result?.user?.uid}\")\r\n                        /*\r\n                        var uid = auth.uid ?: \"\"\r\n\r\n                        val intent= Intent(this,MainActivity::class.java)\r\n                        intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TASK.or(Intent.FLAG_ACTIVITY_NEW_TASK)\r\n                        startActivity(intent)\r\n\r\n                         */\r\n                        checkuseraccesslevel()\r\n                    } else {\r\n                        Log.d(\"Login\", \"Login Failed\", it.exception)\r\n                        Toast.makeText(this, \"Login Failed\", Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n                .addOnFailureListener(this) {\r\n                    Log.d(\"Login\", \"Login Failed\")\r\n                    Toast.makeText(this, \"Failed to log in: ${it.message}\", Toast.LENGTH_SHORT)\r\n                        .show()\r\n                }\r\n        }\r\n\r\n    }\r\n    private fun checkuseraccesslevel()\r\n    {\r\n        val uid = FirebaseAuth.getInstance().uid\r\n        val ref = FirebaseDatabase.getInstance().getReference(\"/users/$uid\")\r\n        ref.addListenerForSingleValueEvent(object : ValueEventListener {\r\n            override fun onDataChange(snapshot: DataSnapshot) {\r\n                val isadmin = snapshot.child(\"admin\").getValue().toString().toInt()\r\n                val user= snapshot.getValue(User::class.java)\r\n                Log.d(\"MainActivity\", \"isadmin: $isadmin\")\r\n                if (user != null) {\r\n                    savedata(user)\r\n                    openactivity()\r\n                }\r\n\r\n\r\n            }\r\n            override fun onCancelled(error: DatabaseError){\r\n                Log.d(\"Database\", error.details)\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    private fun savedata(user: User)\r\n    {\r\n        val sharedPreference =  getSharedPreferences(\"PREFERENCE_NAME\", Context.MODE_PRIVATE)\r\n        var editor = sharedPreference.edit()\r\n        editor.putInt(\"isadmin\",user.isAdmin)\r\n        editor.putString(\"username\", user.fname + user.lname)\r\n        editor.putString(\"email\",user.email)\r\n        editor.putString(\"aptno\",user.aptno)\r\n        editor.putString(\"uid\",user.uid)\r\n        editor.commit()\r\n    }\r\n    private fun openactivity()\r\n    {\r\n        val intent= Intent(this,MainActivity::class.java)\r\n        intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TASK.or(Intent.FLAG_ACTIVITY_NEW_TASK)\r\n        startActivity(intent)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/maintanancebuddy/LoginActivity.kt	(revision 0a9896d66dc76130d4531b0d11dc78fa338d5b6d)
+++ app/src/main/java/com/example/maintanancebuddy/LoginActivity.kt	(date 1606446187972)
@@ -38,7 +38,7 @@
         {
             val builder = AlertDialog.Builder(this)
             builder.setTitle("Forgot Password")
-            val view = layoutInflater.inflate(R.layout.password_reset,null)
+            val view = layoutInflater.inflate(R.layout.dialog_forgot_password,null)
             val username= view.findViewById<EditText>(R.id.et_username)
             builder.setView(view)
             builder.setPositiveButton("Reset",DialogInterface.OnClickListener{_,_->
Index: app/src/main/res/layout/dialog_forgot_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_forgot_password.xml	(date 1606446081877)
+++ app/src/main/res/layout/dialog_forgot_password.xml	(date 1606446081877)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<EditText xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/et_username"
+    android:layout_marginStart="16dp"
+    android:layout_marginEnd="16dp"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"/>
+
